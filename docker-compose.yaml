services:
  database:
    image: postgres:latest
    container_name: subscription-tracker-db
    restart: always
    env_file:
      - ./database/.env
    ports:
      - "5432:5432"
    volumes:
      - ./database/init:/docker-entrypoint-initdb.d

  redis:
    image: redis:alpine
    container_name: subscription-tracker-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - redis-network

  keycloak-db:
    image: postgres:latest
    container_name: keycloak-postgres
    restart: always
    env_file:
      - ./configs/keycloak/postgres.env
    networks:
      - keycloak-network
    volumes:
      - postgres_data:/var/lib/postgresql@17/data

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-server
    restart: always
    env_file:
      - ./configs/keycloak/keycloak.env
    command: start-dev --import-realm --verbose
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8180/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    ports:
      - "8180:8080"
    depends_on:
      - keycloak-db
    networks:
      - keycloak-network
    volumes:
      - ./configs/keycloak/imports/realm-export.json:/opt/keycloak/data/import/realm-export.json

  subscription-tracker-server:
    container_name: subs-tracker-server
    build:
      context: ./service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - /opt/wasubi:/opt/wasubi
    restart: always
    depends_on:
      - database
      - redis
      - keycloak
      # keycloak:
      #   condition: service_healthy
    networks:
      - keycloak-network
      - redis-network

networks:
  keycloak-network:
    driver: bridge
  redis-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local